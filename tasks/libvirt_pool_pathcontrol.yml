---
# -----------------------------------------------------
# Check if the path for each storage pool is the same 
# as specified on our default variables.
# -----------------------------------------------------
#
- virt_pool:
    command: facts
  when: item.name is defined 

- name: Status storage pool '{{ item.name }}' - Incorrect path set.
  virt_pool:
    command: status
    name: '{{ item.name }}'
  register: libvirt_regstatus
  when: ( 
          ( item.name is defined ) and
          ( ansible_libvirt_pools[item.name] is defined ) and
          ( ansible_libvirt_pools[item.name]['path'] is defined ) and
          ( ansible_libvirt_pools[item.name]['path'] != item.path )
        )
  tags: [ 'libvirt' , 'kvm host' , 'pool::status' , 'storage' ]

- name: Stop storage pool '{{ item.name }}' - Incorrect path set.
  virt_pool:
    command: destroy
    name: '{{ item.name }}'
  register: libvirt_regstop
  when: (
          ( libvirt_regstatus is defined ) and
          ( libvirt_regstatus.status is defined ) and
          ( libvirt_regstatus.status == 'active' ) and
          ( item.name is defined ) and
          ( ansible_libvirt_pools[item.name] is defined ) and
          ( ansible_libvirt_pools[item.name]['path'] is defined ) and
          ( ansible_libvirt_pools[item.name]['path'] != item.path )
        )
  tags: [ 'libvirt' , 'kvm host' , 'pool::destroy' , 'storage' ]

- name: Undefine storage pool '{{ item.name }}' - Incorrect path set.
  virt_pool:
    command: undefine
    name: '{{ item.name }}'
  when: ( 
          ( item.name is defined ) and
          ( ansible_libvirt_pools[item.name] is defined ) and
          ( ansible_libvirt_pools[item.name]['path'] is defined ) and
          ( ansible_libvirt_pools[item.name]['path'] != item.path )
        )
  tags: [ 'libvirt' , 'kvm host' , 'pool::undefine' , 'storage' ]

- name: Remove SELinux file context mapping - Incorrect path set.
  sefcontext:
    target: '{{ ansible_libvirt_pools[item.name]["path"] }}(/.$)?'
    setype: '{{ libvirt_selinux_setype }}'
    state: absent
  when: ( 
          ( ansible_selinux is defined ) and
          ( ansible_selinux.status == "enabled" ) and
          ( ansible_selinux.mode != "disabled" ) and
          ( item.name is defined ) and
          ( ansible_libvirt_pools[item.name] is defined ) and
          ( ansible_libvirt_pools[item.name]['path'] is defined ) and
          ( ansible_libvirt_pools[item.name]['path'] != item.path )
        )
  tags: [ 'libvirt' , 'kvm host' , 'selinux::remove' , 'storage' ]

